services:
  mongo:
    image: mongo:latest  # Official MongoDB image
    container_name: database-mongo
    networks:
      - internal-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_APP_PASSWD}
      - MONGO_INITDB_DATABASE=${MONGO_APP_DB}
    volumes:
      - mongo-data:/data/db  # Persistent MongoDB data storage

  express:
    build: .
    container_name: express-backend
    networks:
      - internal-network
      - monitoring-network
    ports:
      - "6000:6000"  # Expose the Express app on port 6000
    depends_on:
      - mongo  # Ensure MongoDB starts before Express
    environment:
      - FORCE_COLOR=1
      - MONGO_APP_URI=${MONGO_APP_URI}
      - PORT=${PORT}
      - FOREIGN_API=${FOREIGN_API}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    expose:
      - "6000"  # Expose 6000 for Prometheus scraping
    volumes:
      - service-logger:/var/tmp/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount custom Prometheus config
    ports:
      - "6002:9090"  # Expose Prometheus on port 6002
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_APP_PASSED}  # Set Grafana admin password
    ports:
      - "6001:3000"  # Expose Grafana on port 6001
    networks:
      - monitoring-network
    volumes:
      - service-logger:/var/tmp/

  scheduler:
    build: ./scheduler  # Path to your scheduler directory with Dockerfile
    container_name: scheduler
    networks:
      - monitoring-network
    depends_on:
      express:
        condition: service_healthy  # Wait for Express to be healthy
    environment:
      - FORCE_COLOR=1
      - SERVER_URL=http://express-backend:6000  # Express server URL
      - USERNAME=${EXPRESS_ACCESS_USENAME}  # Add your username for login
      - PASSWD=${EXPRESS_ACCESS_PASSWD}  # Add your password for login

networks:
  internal-network:
    driver: bridge
  monitoring-network:
    driver: bridge

volumes:
  mongo-data:
    external: true
  service-logger:
    external: true
